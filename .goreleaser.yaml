version: 2
project_name: terraform-provider-gns3

before:
  hooks:
    - go mod tidy
    # Create the manifest in dist/, with a robust version source and fail-fast.
    - |
      bash -lc '
      set -euo pipefail
      VER="${GORELEASER_CURRENT_TAG:-}"; VER="${VER#v}"
      if [ -z "$VER" ]; then VER="${GITHUB_REF_NAME:-}"; VER="${VER#v}"; fi
      if [ -z "$VER" ]; then echo "ERROR: no version (tag) found"; exit 1; fi
      mkdir -p dist
      cat > "dist/terraform-provider-gns3_${VER}_manifest.json" << "EOF"
      {
        "version": 1,
        "metadata": {
          "protocol_versions": ["6.0"]
        }
      }
      EOF
      '

builds:
  - id: provider
    main: .
    env: [CGO_ENABLED=0]
    ldflags: ["-s -w"]
    goos: [darwin, linux]
    goarch: [amd64, arm64]
    binary: 'terraform-provider-gns3_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    ignore:
      - goos: linux
        goarch: arm64

archives:
  - id: zips
    formats: [zip]
    files: []
    name_template: 'terraform-provider-gns3_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

# NEW: register the manifest as an artifact so checksums include it
files:
  - src: 'dist/terraform-provider-gns3_{{ .Version }}_manifest.json'
    dst: 'terraform-provider-gns3_{{ .Version }}_manifest.json'

checksum:
  name_template: 'terraform-provider-gns3_{{ .Version }}_SHA256SUMS'
  algorithm: sha256

signs:
  - id: gpg-sum
    artifacts: checksum
    cmd: gpg
    signature: "${artifact}.sig"
    args:
      - --batch
      - --yes
      - --pinentry-mode
      - loopback
      - --passphrase
      - "{{ .Env.PASSPHRASE }}"
      - --output
      - "${signature}"
      - --detach-sign
      - "${artifact}"

release:
  draft: false
  prerelease: "false"
